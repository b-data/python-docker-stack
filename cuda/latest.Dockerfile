ARG CUDNN_VERSION
ARG CUDNN_VERSION_AMD64=${CUDNN_VERSION}
ARG CUDNN_VERSION_ARM64=${CUDNN_VERSION}
ARG CUDNN_CUDA_VERSION_MAJ_MIN
ARG CUDNN_CUDA_VERSION_MAJ_MIN_AMD64=${CUDNN_CUDA_VERSION_MAJ_MIN}
ARG CUDNN_CUDA_VERSION_MAJ_MIN_ARM64=${CUDNN_CUDA_VERSION_MAJ_MIN}

ARG BUILD_ON_IMAGE
ARG CUDNN_VERSION_MAJ=${CUDNN_VERSION%%.*}
ARG CUDNN_VERSION_MAJ=${CUDNN_VERSION_MAJ:-${CUDNN_VERSION_AMD64%%.*}}
ARG CUDNN_VERSION_MAJ=${CUDNN_VERSION_MAJ:-${CUDNN_VERSION_ARM64%%.*}}
ARG CUDA_IMAGE_FLAVOR

FROM ${BUILD_ON_IMAGE} AS cudnn8-runtime-amd64

ARG CUDNN_VERSION_AMD64
ARG CUDNN_CUDA_VERSION_MAJ_MIN_AMD64

LABEL com.nvidia.cudnn.version="${CUDNN_VERSION_AMD64}"

ENV CUDNN_VERSION=${CUDNN_VERSION_AMD64}
ENV NV_CUDNN_PACKAGE_VERSION=${CUDNN_VERSION_AMD64}
ENV NV_CUDNN_PACKAGE_NAME=libcudnn${NV_CUDNN_PACKAGE_VERSION%%.*}
ENV NV_CUDNN_PACKAGE="${NV_CUDNN_PACKAGE_NAME}=${NV_CUDNN_PACKAGE_VERSION}-1+cuda${CUDNN_CUDA_VERSION_MAJ_MIN_AMD64}"

FROM ${BUILD_ON_IMAGE} AS cudnn8-runtime-arm64

ARG CUDNN_VERSION_ARM64
ARG CUDNN_CUDA_VERSION_MAJ_MIN_ARM64

LABEL com.nvidia.cudnn.version="${CUDNN_VERSION_ARM64}"

ENV CUDNN_VERSION=${CUDNN_VERSION_ARM64}
ENV NV_CUDNN_PACKAGE_VERSION=${CUDNN_VERSION_ARM64}
ENV NV_CUDNN_PACKAGE_NAME=libcudnn${NV_CUDNN_PACKAGE_VERSION%%.*}
ENV NV_CUDNN_PACKAGE="${NV_CUDNN_PACKAGE_NAME}=${NV_CUDNN_PACKAGE_VERSION}-1+cuda${CUDNN_CUDA_VERSION_MAJ_MIN_ARM64}"

FROM ${BUILD_ON_IMAGE} AS cudnn8-devel-amd64

ARG CUDNN_VERSION_AMD64
ARG CUDNN_CUDA_VERSION_MAJ_MIN_AMD64

LABEL com.nvidia.cudnn.version="${CUDNN_VERSION_AMD64}"

ENV CUDNN_VERSION=${CUDNN_VERSION_AMD64}
ENV NV_CUDNN_PACKAGE_VERSION=${CUDNN_VERSION_AMD64}
ENV NV_CUDNN_DEV_PACKAGE_VERSION=${CUDNN_VERSION_AMD64}
ENV NV_CUDNN_PACKAGE_NAME=libcudnn${NV_CUDNN_PACKAGE_VERSION%%.*}
ENV NV_CUDNN_DEV_PACKAGE_NAME=libcudnn${NV_CUDNN_DEV_PACKAGE_VERSION%%.*}-dev
ENV NV_CUDNN_PACKAGE="${NV_CUDNN_PACKAGE_NAME}=${NV_CUDNN_PACKAGE_VERSION}-1+cuda${CUDNN_CUDA_VERSION_MAJ_MIN_AMD64}"
ENV NV_CUDNN_DEV_PACKAGE="${NV_CUDNN_DEV_PACKAGE_NAME}=${NV_CUDNN_DEV_PACKAGE_VERSION}-1+cuda${CUDNN_CUDA_VERSION_MAJ_MIN_AMD64}"

FROM ${BUILD_ON_IMAGE} AS cudnn8-devel-arm64

ARG CUDNN_VERSION_ARM64
ARG CUDNN_CUDA_VERSION_MAJ_MIN_ARM64

LABEL com.nvidia.cudnn.version="${CUDNN_VERSION_ARM64}"

ENV CUDNN_VERSION=${CUDNN_VERSION_ARM64}
ENV NV_CUDNN_PACKAGE_VERSION=${CUDNN_VERSION_ARM64}
ENV NV_CUDNN_DEV_PACKAGE_VERSION=${CUDNN_VERSION_ARM64}
ENV NV_CUDNN_PACKAGE_NAME=libcudnn${NV_CUDNN_PACKAGE_VERSION%%.*}
ENV NV_CUDNN_DEV_PACKAGE_NAME=libcudnn${NV_CUDNN_DEV_PACKAGE_VERSION%%.*}-dev
ENV NV_CUDNN_PACKAGE="${NV_CUDNN_PACKAGE_NAME}=${NV_CUDNN_PACKAGE_VERSION}-1+cuda${CUDNN_CUDA_VERSION_MAJ_MIN_ARM64}"
ENV NV_CUDNN_DEV_PACKAGE="${NV_CUDNN_DEV_PACKAGE_NAME}=${NV_CUDNN_DEV_PACKAGE_VERSION}-1+cuda${CUDNN_CUDA_VERSION_MAJ_MIN_ARM64}"

FROM ${BUILD_ON_IMAGE} AS cudnn9-runtime-amd64

ARG CUDNN_VERSION_AMD64
ARG CUDNN_CUDA_VERSION_MAJ_MIN_AMD64

LABEL com.nvidia.cudnn.version="${CUDNN_VERSION_AMD64}"

ENV CUDNN_VERSION=${CUDNN_VERSION_AMD64}
ENV NV_CUDNN_PACKAGE_VERSION=${CUDNN_VERSION_AMD64}
ENV NV_CUDNN_PACKAGE_NAME=libcudnn${NV_CUDNN_PACKAGE_VERSION%%.*}-cuda-${CUDNN_CUDA_VERSION_MAJ_MIN_AMD64%%.*}
ENV NV_CUDNN_PACKAGE="${NV_CUDNN_PACKAGE_NAME}=${NV_CUDNN_PACKAGE_VERSION}-1"

FROM ${BUILD_ON_IMAGE} AS cudnn9-runtime-arm64

ARG CUDNN_VERSION_ARM64
ARG CUDNN_CUDA_VERSION_MAJ_MIN_ARM64

LABEL com.nvidia.cudnn.version="${CUDNN_VERSION_ARM64}"

ENV CUDNN_VERSION=${CUDNN_VERSION_ARM64}
ENV NV_CUDNN_PACKAGE_VERSION=${CUDNN_VERSION_ARM64}
ENV NV_CUDNN_PACKAGE_NAME=libcudnn${NV_CUDNN_PACKAGE_VERSION%%.*}-cuda-${CUDNN_CUDA_VERSION_MAJ_MIN_ARM64%%.*}
ENV NV_CUDNN_PACKAGE="${NV_CUDNN_PACKAGE_NAME}=${NV_CUDNN_PACKAGE_VERSION}-1"

FROM ${BUILD_ON_IMAGE} AS cudnn9-devel-amd64

ARG CUDNN_VERSION_AMD64
ARG CUDNN_CUDA_VERSION_MAJ_MIN_AMD64

LABEL com.nvidia.cudnn.version="${CUDNN_VERSION_AMD64}"

ENV CUDNN_VERSION=${CUDNN_VERSION_AMD64}
ENV NV_CUDNN_PACKAGE_VERSION=${CUDNN_VERSION_AMD64}
ENV NV_CUDNN_DEV_PACKAGE_VERSION=${CUDNN_VERSION_AMD64}
ENV NV_CUDNN_HEADERS_PACKAGE_VERSION=${CUDNN_VERSION_AMD64}
ENV NV_CUDNN_PACKAGE_NAME=libcudnn${NV_CUDNN_PACKAGE_VERSION%%.*}-cuda-${CUDNN_CUDA_VERSION_MAJ_MIN_AMD64%%.*}
ENV NV_CUDNN_DEV_PACKAGE_NAME=libcudnn${NV_CUDNN_DEV_PACKAGE_VERSION%%.*}-dev-cuda-${CUDNN_CUDA_VERSION_MAJ_MIN_AMD64%%.*}
ENV NV_CUDNN_HEADERS_PACKAGE_NAME=libcudnn${NV_CUDNN_HEADERS_PACKAGE_VERSION%%.*}-headers-cuda-${CUDNN_CUDA_VERSION_MAJ_MIN_AMD64%%.*}
ENV NV_CUDNN_PACKAGE="${NV_CUDNN_PACKAGE_NAME}=${NV_CUDNN_PACKAGE_VERSION}-1"
ENV NV_CUDNN_DEV_PACKAGE="${NV_CUDNN_DEV_PACKAGE_NAME}=${NV_CUDNN_DEV_PACKAGE_VERSION}-1"
ENV NV_CUDNN_HEADERS_PACKAGE="${NV_CUDNN_HEADERS_PACKAGE_NAME}=${NV_CUDNN_HEADERS_PACKAGE_VERSION}-1"

FROM ${BUILD_ON_IMAGE} AS cudnn9-devel-arm64

ARG CUDNN_VERSION_ARM64
ARG CUDNN_CUDA_VERSION_MAJ_MIN_ARM64

LABEL com.nvidia.cudnn.version="${CUDNN_VERSION_ARM64}"

ENV CUDNN_VERSION=${CUDNN_VERSION_ARM64}
ENV NV_CUDNN_PACKAGE_VERSION=${CUDNN_VERSION_ARM64}
ENV NV_CUDNN_DEV_PACKAGE_VERSION=${CUDNN_VERSION_ARM64}
ENV NV_CUDNN_HEADERS_PACKAGE_VERSION=${CUDNN_VERSION_ARM64}
ENV NV_CUDNN_PACKAGE_NAME=libcudnn${NV_CUDNN_PACKAGE_VERSION%%.*}-cuda-${CUDNN_CUDA_VERSION_MAJ_MIN_ARM64%%.*}
ENV NV_CUDNN_DEV_PACKAGE_NAME=libcudnn${NV_CUDNN_DEV_PACKAGE_VERSION%%.*}-dev-cuda-${CUDNN_CUDA_VERSION_MAJ_MIN_ARM64%%.*}
ENV NV_CUDNN_HEADERS_PACKAGE_NAME=libcudnn${NV_CUDNN_HEADERS_PACKAGE_VERSION%%.*}-headers-cuda-${CUDNN_CUDA_VERSION_MAJ_MIN_ARM64%%.*}
ENV NV_CUDNN_PACKAGE="${NV_CUDNN_PACKAGE_NAME}=${NV_CUDNN_PACKAGE_VERSION}-1"
ENV NV_CUDNN_DEV_PACKAGE="${NV_CUDNN_DEV_PACKAGE_NAME}=${NV_CUDNN_DEV_PACKAGE_VERSION}-1"
ENV NV_CUDNN_HEADERS_PACKAGE="${NV_CUDNN_HEADERS_PACKAGE_NAME}=${NV_CUDNN_HEADERS_PACKAGE_VERSION}-1"

FROM cudnn${CUDNN_VERSION_MAJ}-${CUDA_IMAGE_FLAVOR}-${TARGETARCH}

ARG DEBIAN_FRONTEND=noninteractive

ARG CUDA_HOME=/usr/local/cuda
ARG NVBLAS_CONFIG_FILE=/etc/nvblas.conf

ARG CUDA_IMAGE_FLAVOR
ARG CUPTI_AVAILABLE
ARG BUILD_START

ENV CUDA_HOME=${CUDA_HOME} \
    NVBLAS_CONFIG_FILE=${NVBLAS_CONFIG_FILE} \
    LD_LIBRARY_PATH=${LD_LIBRARY_PATH}${LD_LIBRARY_PATH:+:}${CUDA_HOME}/lib:${CUDA_HOME}/lib64${CUPTI_AVAILABLE:+:${CUDA_HOME}/extras/CUPTI/lib64} \
    BUILD_DATE=${BUILD_START}

RUN cpuBlasLib="$(update-alternatives --query \
  libblas.so.3-$(uname -m)-linux-gnu | grep Value | cut -f2 -d' ')" \
  && dpkgArch="$(dpkg --print-architecture)" \
  && CUDA_VERSION_MAJ_MIN_DASH=$(echo ${CUDA_VERSION%.*} | tr '.' '-') \
  ## Install the CUDA Runtime native dev links, headers
  && apt-get update \
  && apt-get -y install --no-install-recommends \
    cuda-cudart-dev-${CUDA_VERSION_MAJ_MIN_DASH}=${NV_CUDA_CUDART_VERSION} \
  ## Keep apt from auto upgrading the CUDA Runtime packages
  && apt-mark hold \
    cuda-cudart-${CUDA_VERSION_MAJ_MIN_DASH} \
    cuda-cudart-dev-${CUDA_VERSION_MAJ_MIN_DASH} \
  ## Unminimise if the system has been minimised
  && if [ ${CUDA_IMAGE_FLAVOR} = "devel" -a $(command -v unminimize) ]; then \
    sed -i "s/apt-get upgrade/#apt-get upgrade/g" "$(which unminimize)"; \
    yes | unminimize; \
    sed -i "s/#apt-get upgrade/apt-get upgrade/g" "$(which unminimize)"; \
  fi \
  ## NVBLAS log configuration
  && touch /var/log/nvblas.log \
  && chown :users /var/log/nvblas.log \
  && chmod g+rw /var/log/nvblas.log \
  ## NVBLAS configuration using all compute-capable GPUs
  && echo "NVBLAS_LOGFILE /var/log/nvblas.log" > $NVBLAS_CONFIG_FILE \
  && echo "NVBLAS_CPU_BLAS_LIB $cpuBlasLib" >> $NVBLAS_CONFIG_FILE \
  && echo "NVBLAS_GPU_LIST ALL" >> $NVBLAS_CONFIG_FILE \
  ## Install cuDNN
  && apt-get -y install --no-install-recommends \
    ${NV_CUDNN_PACKAGE} \
    ${NV_CUDNN_DEV_PACKAGE} \
    ${NV_CUDNN_HEADERS_PACKAGE} \
  ## Keep apt from auto upgrading the cuDNN packages
  && apt-mark hold \
    ${NV_CUDNN_PACKAGE_NAME} \
    ${NV_CUDNN_DEV_PACKAGE_NAME} \
    ${NV_CUDNN_HEADERS_PACKAGE_NAME} \
  ## Clean up
  && rm -rf /var/lib/apt/lists/*
